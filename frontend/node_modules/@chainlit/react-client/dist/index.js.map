{"version":3,"sources":["../src/useChatData.ts","../src/state.ts","../src/utils/group.ts","../src/useChatInteract.ts","../src/utils/message.ts","../src/useChatMessages.ts","../src/useChatSession.ts","../src/utils/token.ts","../src/api/hooks/auth.ts","../src/api/hooks/api.ts","../src/api/index.tsx","../src/index.ts"],"names":["useRecoilValue","isEqual","DefaultValue","atom","selector","uuidv4","groupByDate","data","groupedData","today","yesterday","sevenDaysAgo","thirtyDaysAgo","item","createdAt","isToday","isYesterday","isLast7Days","isLast30Days","category","threadIdToResumeState","chatProfileState","sessionIdAtom","sessionIdState","get","set","newValue","sessionState","actionState","messagesState","tokenCountState","loadingState","askUserState","chatSettingsInputsState","chatSettingsDefaultValueSelector","form","input","chatSettingsValueState","elementState","avatarState","tasklistState","firstUserMessageState","accessTokenState","userState","threadHistoryState","setSelf","onSet","oldValue","timeGroupedThreads","useChatData","loading","elements","avatars","tasklists","actions","session","askUser","chatSettingsInputs","chatSettingsValue","chatSettingsDefaultValue","connected","disabled","useCallback","useResetRecoilState","useSetRecoilState","nestMessages","messages","nestedMessages","message","addMessage","isLastMessage","index","i","hasMessageById","updateMessageById","addMessageToParent","addIndentMessage","indent","newMessage","currentIndentation","nextMessages","msg","parentId","messageId","updatedMessage","deleteMessageById","updateMessageContentById","updatedContent","isSequence","useChatInteract","accessToken","sessionId","resetChatSettings","resetSessionId","resetChatSettingsValue","setFirstUserMessage","setLoading","setMessages","setElements","setAvatars","setTasklists","setActions","setTokenCount","setIdToResume","clear","sendMessage","fileReferences","oldMessages","replyMessage","updateChatSettings","values","stopTask","callAction","action","socket","promise","resolve","reject","response","client","file","onProgress","useChatMessages","firstUserMessage","debounce","useRecoilState","io","useChatSession","setSession","setAskUser","setChatSettingsInputs","chatProfile","setChatProfile","idToResume","_connect","userEnv","old","s","_","thread","step","e","id","token","spec","callback","inputs","element","remove","a","count","connect","disconnect","tokenKey","getToken","setToken","removeToken","jwt_decode","useEffect","useSWR","fetcher","endpoint","useApi","path","options","url","useAuth","apiClient","isLoading","setAccessToken","setThreadHistory","user","setUser","isReady","logout","saveAndSetToken","exp","User","isAuthenticated","ClientError","detail","APIBase","httpEndpoint","on401","onError","prefix","method","signal","headers","body","res","error","ChainlitAPI","generation","controller","tokenCb","payload","reader","push","done","value","string","err","feedback","pagination","filter","threadId","xhr","formData","event","percentage","tokenParam","theme","provider","Socket"],"mappings":"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","sourcesContent":["import { useRecoilValue } from 'recoil';\n\nimport {\n  actionState,\n  askUserState,\n  avatarState,\n  chatSettingsDefaultValueSelector,\n  chatSettingsInputsState,\n  chatSettingsValueState,\n  elementState,\n  loadingState,\n  sessionState,\n  tasklistState\n} from './state';\n\nexport interface IToken {\n  id: number | string;\n  token: string;\n  isSequence: boolean;\n}\n\nconst useChatData = () => {\n  const loading = useRecoilValue(loadingState);\n  const elements = useRecoilValue(elementState);\n  const avatars = useRecoilValue(avatarState);\n  const tasklists = useRecoilValue(tasklistState);\n  const actions = useRecoilValue(actionState);\n  const session = useRecoilValue(sessionState);\n  const askUser = useRecoilValue(askUserState);\n  const chatSettingsInputs = useRecoilValue(chatSettingsInputsState);\n  const chatSettingsValue = useRecoilValue(chatSettingsValueState);\n  const chatSettingsDefaultValue = useRecoilValue(\n    chatSettingsDefaultValueSelector\n  );\n\n  const connected = session?.socket.connected && !session?.error;\n  const disabled =\n    !connected ||\n    loading ||\n    askUser?.spec.type === 'file' ||\n    askUser?.spec.type === 'action';\n\n  return {\n    actions,\n    askUser,\n    avatars,\n    chatSettingsDefaultValue,\n    chatSettingsInputs,\n    chatSettingsValue,\n    connected,\n    disabled,\n    elements,\n    error: session?.error,\n    loading,\n    tasklists\n  };\n};\n\nexport { useChatData };\n","import isEqual from 'lodash/isEqual';\nimport { DefaultValue, atom, selector } from 'recoil';\nimport { Socket } from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  IAction,\n  IAsk,\n  IAvatarElement,\n  IMessageElement,\n  IStep,\n  ITasklistElement,\n  IUser,\n  ThreadHistory\n} from './types';\nimport { groupByDate } from './utils/group';\n\nexport interface ISession {\n  socket: Socket;\n  error?: boolean;\n}\n\nexport const threadIdToResumeState = atom<string | undefined>({\n  key: 'ThreadIdToResume',\n  default: undefined\n});\n\nexport const chatProfileState = atom<string | undefined>({\n  key: 'ChatProfile',\n  default: undefined\n});\n\nconst sessionIdAtom = atom<string>({\n  key: 'SessionId',\n  default: uuidv4()\n});\n\nexport const sessionIdState = selector({\n  key: 'SessionIdSelector',\n  get: ({ get }) => get(sessionIdAtom),\n  set: ({ set }, newValue) =>\n    set(sessionIdAtom, newValue instanceof DefaultValue ? uuidv4() : newValue)\n});\n\nexport const sessionState = atom<ISession | undefined>({\n  key: 'Session',\n  dangerouslyAllowMutability: true,\n  default: undefined\n});\n\nexport const actionState = atom<IAction[]>({\n  key: 'Actions',\n  default: []\n});\n\nexport const messagesState = atom<IStep[]>({\n  key: 'Messages',\n  dangerouslyAllowMutability: true,\n  default: []\n});\n\nexport const tokenCountState = atom<number>({\n  key: 'TokenCount',\n  default: 0\n});\n\nexport const loadingState = atom<boolean>({\n  key: 'Loading',\n  default: false\n});\n\nexport const askUserState = atom<IAsk | undefined>({\n  key: 'AskUser',\n  default: undefined\n});\n\nexport const chatSettingsInputsState = atom<any>({\n  key: 'ChatSettings',\n  default: []\n});\n\nexport const chatSettingsDefaultValueSelector = selector({\n  key: 'ChatSettingsValue/Default',\n  get: ({ get }) => {\n    const chatSettings = get(chatSettingsInputsState);\n    return chatSettings.reduce(\n      (form: { [key: string]: any }, input: any) => (\n        (form[input.id] = input.initial), form\n      ),\n      {}\n    );\n  }\n});\n\nexport const chatSettingsValueState = atom({\n  key: 'ChatSettingsValue',\n  default: chatSettingsDefaultValueSelector\n});\n\nexport const elementState = atom<IMessageElement[]>({\n  key: 'DisplayElements',\n  default: []\n});\n\nexport const avatarState = atom<IAvatarElement[]>({\n  key: 'AvatarElements',\n  default: []\n});\n\nexport const tasklistState = atom<ITasklistElement[]>({\n  key: 'TasklistElements',\n  default: []\n});\n\nexport const firstUserMessageState = atom<IStep | undefined>({\n  key: 'FirstUserMessage',\n  default: undefined\n});\n\nexport const accessTokenState = atom<string | undefined>({\n  key: 'AccessToken',\n  default: undefined\n});\n\nexport const userState = atom<IUser | null>({\n  key: 'User',\n  default: null\n});\n\nexport const threadHistoryState = atom<ThreadHistory | undefined>({\n  key: 'ThreadHistory',\n  default: {\n    threads: undefined,\n    currentThreadId: undefined,\n    timeGroupedThreads: undefined,\n    pageInfo: undefined\n  },\n  effects: [\n    ({ setSelf, onSet }: { setSelf: any; onSet: any }) => {\n      onSet(\n        (\n          newValue: ThreadHistory | undefined,\n          oldValue: ThreadHistory | undefined\n        ) => {\n          let timeGroupedThreads = newValue?.timeGroupedThreads;\n          if (\n            newValue?.threads &&\n            !isEqual(newValue.threads, oldValue?.timeGroupedThreads)\n          ) {\n            timeGroupedThreads = groupByDate(newValue.threads);\n          }\n\n          setSelf({\n            ...newValue,\n            timeGroupedThreads\n          });\n        }\n      );\n    }\n  ]\n});\n","import { IThread } from 'src/types';\n\nexport const groupByDate = (data: IThread[]) => {\n  const groupedData: { [key: string]: IThread[] } = {};\n\n  const today = new Date();\n  const yesterday = new Date();\n  yesterday.setDate(today.getDate() - 1);\n  const sevenDaysAgo = new Date();\n  sevenDaysAgo.setDate(today.getDate() - 7);\n  const thirtyDaysAgo = new Date();\n  thirtyDaysAgo.setDate(today.getDate() - 30);\n\n  data.forEach((item) => {\n    const createdAt = new Date(item.createdAt);\n    const isToday = createdAt.toDateString() === today.toDateString();\n    const isYesterday = createdAt.toDateString() === yesterday.toDateString();\n    const isLast7Days = createdAt >= sevenDaysAgo;\n    const isLast30Days = createdAt >= thirtyDaysAgo;\n\n    let category: string;\n\n    if (isToday) {\n      category = 'Today';\n    } else if (isYesterday) {\n      category = 'Yesterday';\n    } else if (isLast7Days) {\n      category = 'Previous 7 days';\n    } else if (isLast30Days) {\n      category = 'Previous 30 days';\n    } else {\n      const monthYear = createdAt.toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      });\n\n      category = monthYear.split(' ').slice(0, 1).join(' ');\n    }\n\n    if (!groupedData[category]) {\n      groupedData[category] = [];\n    }\n\n    groupedData[category].push(item);\n  });\n\n  return groupedData;\n};\n","import { useCallback } from 'react';\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\nimport {\n  accessTokenState,\n  actionState,\n  askUserState,\n  avatarState,\n  chatSettingsInputsState,\n  chatSettingsValueState,\n  elementState,\n  firstUserMessageState,\n  loadingState,\n  messagesState,\n  sessionIdState,\n  sessionState,\n  tasklistState,\n  threadIdToResumeState,\n  tokenCountState\n} from 'src/state';\nimport { IAction, IFileRef, IStep } from 'src/types';\nimport { addMessage } from 'src/utils/message';\n\nimport { ChainlitAPI } from './api';\n\nconst useChatInteract = () => {\n  const accessToken = useRecoilValue(accessTokenState);\n  const session = useRecoilValue(sessionState);\n  const askUser = useRecoilValue(askUserState);\n  const sessionId = useRecoilValue(sessionIdState);\n\n  const resetChatSettings = useResetRecoilState(chatSettingsInputsState);\n  const resetSessionId = useResetRecoilState(sessionIdState);\n  const resetChatSettingsValue = useResetRecoilState(chatSettingsValueState);\n\n  const setFirstUserMessage = useSetRecoilState(firstUserMessageState);\n  const setLoading = useSetRecoilState(loadingState);\n  const setMessages = useSetRecoilState(messagesState);\n  const setElements = useSetRecoilState(elementState);\n  const setAvatars = useSetRecoilState(avatarState);\n  const setTasklists = useSetRecoilState(tasklistState);\n  const setActions = useSetRecoilState(actionState);\n  const setTokenCount = useSetRecoilState(tokenCountState);\n  const setIdToResume = useSetRecoilState(threadIdToResumeState);\n\n  const clear = useCallback(() => {\n    session?.socket.emit('clear_session');\n    session?.socket.disconnect();\n    setIdToResume(undefined);\n    resetSessionId();\n    setFirstUserMessage(undefined);\n    setMessages([]);\n    setElements([]);\n    setAvatars([]);\n    setTasklists([]);\n    setActions([]);\n    setTokenCount(0);\n    resetChatSettings();\n    resetChatSettingsValue();\n  }, [session]);\n\n  const sendMessage = useCallback(\n    (message: IStep, fileReferences?: IFileRef[]) => {\n      setMessages((oldMessages) => addMessage(oldMessages, message));\n\n      session?.socket.emit('ui_message', { message, fileReferences });\n    },\n    [session?.socket]\n  );\n\n  const replyMessage = useCallback(\n    (message: IStep) => {\n      if (askUser) {\n        setMessages((oldMessages) => addMessage(oldMessages, message));\n        askUser.callback(message);\n      }\n    },\n    [askUser]\n  );\n\n  const updateChatSettings = useCallback(\n    (values: object) => {\n      session?.socket.emit('chat_settings_change', values);\n    },\n    [session?.socket]\n  );\n\n  const stopTask = useCallback(() => {\n    setLoading(false);\n    session?.socket.emit('stop');\n  }, [session?.socket]);\n\n  const callAction = useCallback(\n    (action: IAction) => {\n      const socket = session?.socket;\n      if (!socket) return;\n\n      const promise = new Promise<{\n        id: string;\n        status: boolean;\n        response?: string;\n      }>((resolve, reject) => {\n        socket.once('action_response', (response) => {\n          if (response.status) {\n            resolve(response);\n          } else {\n            reject(response);\n          }\n        });\n      });\n\n      socket.emit('action_call', action);\n\n      return promise;\n    },\n    [session?.socket]\n  );\n\n  const uploadFile = useCallback(\n    (\n      client: ChainlitAPI,\n      file: File,\n      onProgress: (progress: number) => void\n    ) => {\n      return client.uploadFile(file, onProgress, sessionId, accessToken);\n    },\n    [sessionId, accessToken]\n  );\n\n  return {\n    uploadFile,\n    callAction,\n    clear,\n    replyMessage,\n    sendMessage,\n    stopTask,\n    setIdToResume,\n    updateChatSettings\n  };\n};\n\nexport { useChatInteract };\n","import isEqual from 'lodash/isEqual';\n\nimport { IStep } from '..';\n\nconst nestMessages = (messages: IStep[]): IStep[] => {\n  let nestedMessages: IStep[] = [];\n\n  for (const message of messages) {\n    nestedMessages = addMessage(nestedMessages, message);\n  }\n\n  return nestedMessages;\n};\n\nconst isLastMessage = (messages: IStep[], index: number) => {\n  if (messages.length - 1 === index) {\n    return true;\n  }\n\n  for (let i = index + 1; i < messages.length; i++) {\n    if (messages[i].streaming) {\n      continue;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// Nested messages utils\n\nconst addMessage = (messages: IStep[], message: IStep): IStep[] => {\n  if (hasMessageById(messages, message.id)) {\n    return updateMessageById(messages, message.id, message);\n  } else if ('parentId' in message && message.parentId) {\n    return addMessageToParent(messages, message.parentId, message);\n  } else if ('indent' in message && message.indent && message.indent > 0) {\n    return addIndentMessage(messages, message.indent, message);\n  } else {\n    return [...messages, message];\n  }\n};\n\nconst addIndentMessage = (\n  messages: IStep[],\n  indent: number,\n  newMessage: IStep,\n  currentIndentation: number = 0\n): IStep[] => {\n  const nextMessages = [...messages];\n\n  if (nextMessages.length === 0) {\n    return [...nextMessages, newMessage];\n  } else {\n    const index = nextMessages.length - 1;\n    const msg = nextMessages[index];\n    msg.steps = msg.steps || [];\n\n    if (currentIndentation + 1 === indent) {\n      msg.steps = [...msg.steps, newMessage];\n      nextMessages[index] = { ...msg };\n\n      return nextMessages;\n    } else {\n      msg.steps = addIndentMessage(\n        msg.steps,\n        indent,\n        newMessage,\n        currentIndentation + 1\n      );\n\n      nextMessages[index] = { ...msg };\n      return nextMessages;\n    }\n  }\n};\n\nconst addMessageToParent = (\n  messages: IStep[],\n  parentId: string,\n  newMessage: IStep\n): IStep[] => {\n  const nextMessages = [...messages];\n\n  for (let index = 0; index < nextMessages.length; index++) {\n    const msg = nextMessages[index];\n\n    if (isEqual(msg.id, parentId)) {\n      msg.steps = msg.steps ? [...msg.steps, newMessage] : [newMessage];\n      nextMessages[index] = { ...msg };\n    } else if (hasMessageById(nextMessages, parentId) && msg.steps) {\n      msg.steps = addMessageToParent(msg.steps, parentId, newMessage);\n      nextMessages[index] = { ...msg };\n    }\n  }\n\n  return nextMessages;\n};\n\nconst hasMessageById = (messages: IStep[], messageId: string) => {\n  for (const message of messages) {\n    if (isEqual(message.id, messageId)) {\n      return true;\n    } else if (message.steps && message.steps.length > 0) {\n      if (hasMessageById(message.steps, messageId)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst updateMessageById = (\n  messages: IStep[],\n  messageId: string,\n  updatedMessage: IStep\n): IStep[] => {\n  const nextMessages = [...messages];\n\n  for (let index = 0; index < nextMessages.length; index++) {\n    const msg = nextMessages[index];\n\n    if (isEqual(msg.id, messageId)) {\n      nextMessages[index] = { steps: msg.steps, ...updatedMessage };\n    } else if (hasMessageById(nextMessages, messageId) && msg.steps) {\n      msg.steps = updateMessageById(msg.steps, messageId, updatedMessage);\n      nextMessages[index] = { ...msg };\n    }\n  }\n\n  return nextMessages;\n};\n\nconst deleteMessageById = (messages: IStep[], messageId: string) => {\n  let nextMessages = [...messages];\n\n  for (let index = 0; index < nextMessages.length; index++) {\n    const msg = nextMessages[index];\n\n    if (msg.id === messageId) {\n      nextMessages = [\n        ...nextMessages.slice(0, index),\n        ...nextMessages.slice(index + 1)\n      ];\n    } else if (hasMessageById(nextMessages, messageId) && msg.steps) {\n      msg.steps = deleteMessageById(msg.steps, messageId);\n      nextMessages[index] = { ...msg };\n    }\n  }\n\n  return nextMessages;\n};\n\nconst updateMessageContentById = (\n  messages: IStep[],\n  messageId: number | string,\n  updatedContent: string,\n  isSequence: boolean\n): IStep[] => {\n  const nextMessages = [...messages];\n\n  for (let index = 0; index < nextMessages.length; index++) {\n    const msg = nextMessages[index];\n\n    if (isEqual(msg.id, messageId)) {\n      if ('content' in msg && msg.content !== undefined) {\n        if (isSequence) {\n          msg.content = updatedContent;\n        } else {\n          msg.content += updatedContent;\n        }\n      } else {\n        if ('output' in msg && msg.output !== undefined) {\n          if (isSequence) {\n            msg.output = updatedContent;\n          } else {\n            msg.output += updatedContent;\n          }\n        }\n      }\n\n      nextMessages[index] = { ...msg };\n    } else if (msg.steps) {\n      msg.steps = updateMessageContentById(\n        msg.steps,\n        messageId,\n        updatedContent,\n        isSequence\n      );\n      nextMessages[index] = { ...msg };\n    }\n  }\n\n  return nextMessages;\n};\n\nexport {\n  addMessageToParent,\n  addMessage,\n  deleteMessageById,\n  hasMessageById,\n  isLastMessage,\n  nestMessages,\n  updateMessageById,\n  updateMessageContentById\n};\n","import { useRecoilValue } from 'recoil';\n\nimport { firstUserMessageState, messagesState } from './state';\n\nconst useChatMessages = () => {\n  const messages = useRecoilValue(messagesState);\n  const firstUserMessage = useRecoilValue(firstUserMessageState);\n\n  return {\n    messages,\n    firstUserMessage\n  };\n};\n\nexport { useChatMessages };\n","import debounce from 'lodash/debounce';\nimport { useCallback } from 'react';\nimport {\n  useRecoilState,\n  useRecoilValue,\n  useResetRecoilState,\n  useSetRecoilState\n} from 'recoil';\nimport io from 'socket.io-client';\nimport {\n  actionState,\n  askUserState,\n  avatarState,\n  chatProfileState,\n  chatSettingsInputsState,\n  chatSettingsValueState,\n  elementState,\n  firstUserMessageState,\n  loadingState,\n  messagesState,\n  sessionIdState,\n  sessionState,\n  tasklistState,\n  threadIdToResumeState,\n  tokenCountState\n} from 'src/state';\nimport {\n  IAction,\n  IAvatarElement,\n  IElement,\n  IMessageElement,\n  IStep,\n  ITasklistElement,\n  IThread\n} from 'src/types';\nimport {\n  addMessage,\n  deleteMessageById,\n  updateMessageById,\n  updateMessageContentById\n} from 'src/utils/message';\n\nimport { ChainlitAPI } from './api';\nimport type { IToken } from './useChatData';\n\nconst useChatSession = () => {\n  const sessionId = useRecoilValue(sessionIdState);\n\n  const [session, setSession] = useRecoilState(sessionState);\n\n  const resetChatSettingsValue = useResetRecoilState(chatSettingsValueState);\n  const setFirstUserMessage = useSetRecoilState(firstUserMessageState);\n  const setLoading = useSetRecoilState(loadingState);\n  const setMessages = useSetRecoilState(messagesState);\n  const setAskUser = useSetRecoilState(askUserState);\n  const setElements = useSetRecoilState(elementState);\n  const setAvatars = useSetRecoilState(avatarState);\n  const setTasklists = useSetRecoilState(tasklistState);\n  const setActions = useSetRecoilState(actionState);\n  const setChatSettingsInputs = useSetRecoilState(chatSettingsInputsState);\n  const setTokenCount = useSetRecoilState(tokenCountState);\n  const [chatProfile, setChatProfile] = useRecoilState(chatProfileState);\n  const idToResume = useRecoilValue(threadIdToResumeState);\n\n  const _connect = useCallback(\n    ({\n      client,\n      userEnv,\n      accessToken\n    }: {\n      client: ChainlitAPI;\n      userEnv: Record<string, string>;\n      accessToken?: string;\n    }) => {\n      const socket = io(client.httpEndpoint, {\n        path: '/ws/socket.io',\n        extraHeaders: {\n          Authorization: accessToken || '',\n          'X-Chainlit-Session-Id': sessionId,\n          'X-Chainlit-Thread-Id': idToResume || '',\n          'user-env': JSON.stringify(userEnv),\n          'X-Chainlit-Chat-Profile': chatProfile || ''\n        }\n      });\n      setSession((old) => {\n        old?.socket?.removeAllListeners();\n        old?.socket?.close();\n        return {\n          socket\n        };\n      });\n\n      socket.on('connect', () => {\n        socket.emit('connection_successful');\n        setSession((s) => ({ ...s!, error: false }));\n      });\n\n      socket.on('connect_error', (_) => {\n        setSession((s) => ({ ...s!, error: true }));\n      });\n\n      socket.on('task_start', () => {\n        setLoading(true);\n      });\n\n      socket.on('task_end', () => {\n        setLoading(false);\n      });\n\n      socket.on('reload', () => {\n        socket.emit('clear_session');\n        window.location.reload();\n      });\n\n      socket.on('resume_thread', (thread: IThread) => {\n        let messages: IStep[] = [];\n        for (const step of thread.steps) {\n          messages = addMessage(messages, step);\n        }\n        if (thread.metadata?.chat_profile) {\n          setChatProfile(thread.metadata?.chat_profile);\n        }\n        setMessages(messages);\n        const elements = thread.elements || [];\n        setAvatars(\n          (elements as IAvatarElement[]).filter((e) => e.type === 'avatar')\n        );\n        setTasklists(\n          (elements as ITasklistElement[]).filter((e) => e.type === 'tasklist')\n        );\n        setElements(\n          (elements as IMessageElement[]).filter(\n            (e) => ['avatar', 'tasklist'].indexOf(e.type) === -1\n          )\n        );\n      });\n\n      socket.on('new_message', (message: IStep) => {\n        setMessages((oldMessages) => addMessage(oldMessages, message));\n      });\n\n      socket.on('init_thread', (message: IStep) => {\n        setFirstUserMessage(message);\n      });\n\n      socket.on('update_message', (message: IStep) => {\n        setMessages((oldMessages) =>\n          updateMessageById(oldMessages, message.id, message)\n        );\n      });\n\n      socket.on('delete_message', (message: IStep) => {\n        setMessages((oldMessages) =>\n          deleteMessageById(oldMessages, message.id)\n        );\n      });\n\n      socket.on('stream_start', (message: IStep) => {\n        setMessages((oldMessages) => addMessage(oldMessages, message));\n      });\n\n      socket.on('stream_token', ({ id, token, isSequence }: IToken) => {\n        setMessages((oldMessages) =>\n          updateMessageContentById(oldMessages, id, token, isSequence)\n        );\n      });\n\n      socket.on('ask', ({ msg, spec }, callback) => {\n        setAskUser({ spec, callback });\n        setMessages((oldMessages) => addMessage(oldMessages, msg));\n\n        setLoading(false);\n      });\n\n      socket.on('ask_timeout', () => {\n        setAskUser(undefined);\n        setLoading(false);\n      });\n\n      socket.on('clear_ask', () => {\n        setAskUser(undefined);\n      });\n\n      socket.on('chat_settings', (inputs: any) => {\n        setChatSettingsInputs(inputs);\n        resetChatSettingsValue();\n      });\n\n      socket.on('element', (element: IElement) => {\n        if (!element.url && element.chainlitKey) {\n          element.url = client.getElementUrl(\n            element.chainlitKey,\n            sessionId,\n            accessToken\n          );\n        }\n\n        if (element.type === 'avatar') {\n          setAvatars((old) => {\n            const index = old.findIndex((e) => e.id === element.id);\n            if (index === -1) {\n              return [...old, element];\n            } else {\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\n            }\n          });\n        } else if (element.type === 'tasklist') {\n          setTasklists((old) => {\n            const index = old.findIndex((e) => e.id === element.id);\n            if (index === -1) {\n              return [...old, element];\n            } else {\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\n            }\n          });\n        } else {\n          setElements((old) => {\n            const index = old.findIndex((e) => e.id === element.id);\n            if (index === -1) {\n              return [...old, element];\n            } else {\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\n            }\n          });\n        }\n      });\n\n      socket.on('remove_element', (remove: { id: string }) => {\n        setElements((old) => {\n          return old.filter((e) => e.id !== remove.id);\n        });\n        setTasklists((old) => {\n          return old.filter((e) => e.id !== remove.id);\n        });\n        setAvatars((old) => {\n          return old.filter((e) => e.id !== remove.id);\n        });\n      });\n\n      socket.on('action', (action: IAction) => {\n        setActions((old) => [...old, action]);\n      });\n\n      socket.on('remove_action', (action: IAction) => {\n        setActions((old) => {\n          const index = old.findIndex((a) => a.id === action.id);\n          if (index === -1) return old;\n          return [...old.slice(0, index), ...old.slice(index + 1)];\n        });\n      });\n\n      socket.on('token_usage', (count: number) => {\n        setTokenCount((old) => old + count);\n      });\n    },\n    [setSession, sessionId, chatProfile]\n  );\n\n  const connect = useCallback(debounce(_connect, 200), [_connect]);\n\n  const disconnect = useCallback(() => {\n    if (session?.socket) {\n      session.socket.removeAllListeners();\n      session.socket.close();\n    }\n  }, [session]);\n\n  return { connect, disconnect, chatProfile, idToResume, setChatProfile };\n};\n\nexport { useChatSession };\n","const tokenKey = 'token';\n\nexport function getToken() {\n  try {\n    return localStorage.getItem(tokenKey);\n  } catch (e) {\n    return;\n  }\n}\n\nexport function setToken(token: string) {\n  try {\n    return localStorage.setItem(tokenKey, token);\n  } catch (e) {\n    return;\n  }\n}\n\nexport function removeToken() {\n  try {\n    return localStorage.removeItem(tokenKey);\n  } catch (e) {\n    return;\n  }\n}\n","import jwt_decode from 'jwt-decode';\nimport { useEffect } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { accessTokenState, threadHistoryState, userState } from 'src/state';\nimport { IUser } from 'src/types';\nimport { getToken, removeToken, setToken } from 'src/utils/token';\n\nimport { ChainlitAPI } from '..';\nimport { useApi } from './api';\n\nexport const useAuth = (apiClient: ChainlitAPI) => {\n  const { data, isLoading } = useApi<{\n    requireLogin: boolean;\n    passwordAuth: boolean;\n    headerAuth: boolean;\n    oauthProviders: string[];\n  }>(apiClient, '/auth/config');\n  const [accessToken, setAccessToken] = useRecoilState(accessTokenState);\n  const setThreadHistory = useSetRecoilState(threadHistoryState);\n  const [user, setUser] = useRecoilState(userState);\n\n  const isReady = !!(!isLoading && data);\n\n  const logout = () => {\n    setUser(null);\n    removeToken();\n    setAccessToken('');\n    setThreadHistory(undefined);\n  };\n\n  const saveAndSetToken = (token: string | null | undefined) => {\n    if (!token) {\n      logout();\n      return;\n    }\n    try {\n      const { exp, ...User } = jwt_decode(token) as any;\n      setToken(token);\n      setAccessToken(`Bearer ${token}`);\n      setUser(User as IUser);\n    } catch (e) {\n      console.error(\n        'Invalid token, clearing token from local storage',\n        'error:',\n        e\n      );\n      logout();\n    }\n  };\n\n  useEffect(() => {\n    if (!user && getToken()) {\n      // Initialize the token from local storage\n      saveAndSetToken(getToken());\n      return;\n    }\n  }, []);\n\n  const isAuthenticated = !!accessToken;\n\n  if (data && !data.requireLogin) {\n    return {\n      data,\n      user: null,\n      isReady,\n      isAuthenticated: true,\n      accessToken: '',\n      logout: () => {},\n      setAccessToken: () => {}\n    };\n  }\n\n  return {\n    data,\n    user: user,\n    isAuthenticated,\n    isReady,\n    accessToken: accessToken,\n    logout: logout,\n    setAccessToken: saveAndSetToken\n  };\n};\n","import { useRecoilValue } from 'recoil';\nimport { ChainlitAPI } from 'src/api';\nimport { accessTokenState } from 'src/state';\nimport useSWR, { SWRConfiguration } from 'swr';\n\nconst fetcher = async (\n  client: ChainlitAPI,\n  endpoint: string,\n  token?: string\n) => {\n  const res = await client.get(endpoint, token);\n\n  return res?.json();\n};\n\nfunction useApi<T>(\n  client: ChainlitAPI,\n  path: string | null,\n  options?: SWRConfiguration\n) {\n  const accessToken = useRecoilValue(accessTokenState);\n\n  return useSWR<T, Error>(\n    path ? [path, accessToken] : null,\n    ([url, token]: [url: string, token: string]) => fetcher(client, url, token),\n    options\n  );\n}\n\nexport { useApi, fetcher };\n","import { IGeneration, IThread } from 'src/types';\nimport { removeToken } from 'src/utils/token';\n\nimport { IFeedback } from 'src/types/feedback';\n\nexport * from './hooks/auth';\nexport * from './hooks/api';\n\nexport interface IThreadFilters {\n  search?: string;\n  feedback?: number;\n}\n\nexport interface IPageInfo {\n  hasNextPage: boolean;\n  endCursor?: string;\n}\n\nexport interface IPagination {\n  first: number;\n  cursor?: string | number;\n}\n\nexport class ClientError extends Error {\n  detail?: string;\n\n  constructor(message: string, detail?: string) {\n    super(message);\n    this.detail = detail;\n  }\n\n  toString() {\n    if (this.detail) {\n      return `${this.message}: ${this.detail}`;\n    } else {\n      return this.message;\n    }\n  }\n}\n\ntype Payload = FormData | any;\n\nexport class APIBase {\n  constructor(\n    public httpEndpoint: string,\n    public on401?: () => void,\n    public onError?: (error: ClientError) => void\n  ) {}\n\n  buildEndpoint(path: string) {\n    if (this.httpEndpoint.endsWith('/')) {\n      // remove trailing slash on httpEndpoint\n      return `${this.httpEndpoint.slice(0, -1)}${path}`;\n    } else {\n      return `${this.httpEndpoint}${path}`;\n    }\n  }\n\n  checkToken(token: string) {\n    const prefix = 'Bearer ';\n    if (token.startsWith(prefix)) {\n      return token;\n    } else {\n      return prefix + token;\n    }\n  }\n\n  async fetch(\n    method: string,\n    path: string,\n    token?: string,\n    data?: Payload,\n    signal?: AbortSignal\n  ): Promise<Response> {\n    try {\n      const headers: { Authorization?: string; 'Content-Type'?: string } = {};\n      if (token) headers['Authorization'] = this.checkToken(token); // Assuming token is a bearer token\n\n      let body;\n\n      if (data instanceof FormData) {\n        body = data;\n      } else {\n        headers['Content-Type'] = 'application/json';\n        body = data ? JSON.stringify(data) : null;\n      }\n\n      const res = await fetch(this.buildEndpoint(path), {\n        method,\n        headers,\n        signal,\n        body\n      });\n\n      if (!res.ok) {\n        const body = await res.json();\n        if (res.status === 401 && this.on401) {\n          removeToken();\n          this.on401();\n        }\n        throw new ClientError(res.statusText, body.detail);\n      }\n\n      return res;\n    } catch (error: any) {\n      if (error instanceof ClientError && this.onError) {\n        this.onError(error);\n      }\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async get(endpoint: string, token?: string) {\n    return await this.fetch('GET', endpoint, token);\n  }\n\n  async post(\n    endpoint: string,\n    data: Payload,\n    token?: string,\n    signal?: AbortSignal\n  ) {\n    return await this.fetch('POST', endpoint, token, data, signal);\n  }\n\n  async put(endpoint: string, data: Payload, token?: string) {\n    return await this.fetch('PUT', endpoint, token, data);\n  }\n\n  async patch(endpoint: string, data: Payload, token?: string) {\n    return await this.fetch('PATCH', endpoint, token, data);\n  }\n\n  async delete(endpoint: string, data: Payload, token?: string) {\n    return await this.fetch('DELETE', endpoint, token, data);\n  }\n}\n\nexport class ChainlitAPI extends APIBase {\n  async headerAuth() {\n    const res = await this.post(`/auth/header`, {});\n    return res.json();\n  }\n\n  async passwordAuth(data: FormData) {\n    const res = await this.post(`/login`, data);\n    return res.json();\n  }\n\n  async getGeneration(\n    generation: IGeneration,\n    userEnv = {},\n    controller: AbortController,\n    accessToken?: string,\n    tokenCb?: (done: boolean, token: string) => void\n  ) {\n    const payload = { userEnv };\n    if (generation.type === 'CHAT') {\n      payload['chatGeneration'] = generation;\n    } else {\n      payload['completionGeneration'] = generation;\n    }\n    const response = await this.post(\n      `/generation`,\n      payload,\n      accessToken,\n      controller.signal\n    );\n\n    const reader = response?.body?.getReader();\n\n    const stream = new ReadableStream({\n      start(controller) {\n        function push() {\n          reader!\n            .read()\n            .then(({ done, value }) => {\n              if (done) {\n                controller.close();\n                tokenCb && tokenCb(done, '');\n                return;\n              }\n              const string = new TextDecoder('utf-8').decode(value);\n              tokenCb && tokenCb(done, string);\n              controller.enqueue(value);\n              push();\n            })\n            .catch((err) => {\n              controller.close();\n              tokenCb && tokenCb(true, '');\n              console.error(err);\n            });\n        }\n        push();\n      }\n    });\n\n    return stream;\n  }\n\n  async setFeedback(\n    feedback: IFeedback,\n    accessToken?: string\n  ): Promise<{ success: boolean; feedbackId: string }> {\n    const res = await this.put(`/feedback`, { feedback }, accessToken);\n    return res.json();\n  }\n\n  async listThreads(\n    pagination: IPagination,\n    filter: IThreadFilters,\n    accessToken?: string\n  ): Promise<{\n    pageInfo: IPageInfo;\n    data: IThread[];\n  }> {\n    const res = await this.post(\n      `/project/threads`,\n      { pagination, filter },\n      accessToken\n    );\n\n    return res.json();\n  }\n\n  async deleteThread(threadId: string, accessToken?: string) {\n    const res = await this.delete(`/project/thread`, { threadId }, accessToken);\n\n    return res.json();\n  }\n\n  uploadFile(\n    file: File,\n    onProgress: (progress: number) => void,\n    sessionId: string,\n    token?: string\n  ) {\n    const xhr = new XMLHttpRequest();\n\n    const promise = new Promise<{ id: string }>((resolve, reject) => {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      xhr.open(\n        'POST',\n        this.buildEndpoint(`/project/file?session_id=${sessionId}`),\n        true\n      );\n\n      if (token) {\n        xhr.setRequestHeader('Authorization', this.checkToken(token));\n      }\n\n      // Track the progress of the upload\n      xhr.upload.onprogress = function (event) {\n        if (event.lengthComputable) {\n          const percentage = (event.loaded / event.total) * 100;\n          onProgress(percentage);\n        }\n      };\n\n      xhr.onload = function () {\n        if (xhr.status === 200) {\n          const response = JSON.parse(xhr.responseText);\n          resolve(response);\n        } else {\n          reject('Upload failed');\n        }\n      };\n\n      xhr.onerror = function () {\n        reject('Upload error');\n      };\n\n      xhr.send(formData);\n    });\n\n    return { xhr, promise };\n  }\n\n  getElementUrl(id: string, sessionId: string, accessToken?: string) {\n    let tokenParam = '';\n    if (accessToken) {\n      tokenParam = `?token=${accessToken}`;\n    }\n    return this.buildEndpoint(\n      `/project/file/${id}?session_id=${sessionId}${tokenParam}`\n    );\n  }\n\n  getLogoEndpoint(theme: string) {\n    return this.buildEndpoint(`/logo?theme=${theme}`);\n  }\n\n  getOAuthEndpoint(provider: string) {\n    return this.buildEndpoint(`/auth/oauth/${provider}`);\n  }\n}\n","export * from './useChatData';\nexport * from './useChatInteract';\nexport * from './useChatMessages';\nexport * from './useChatSession';\nexport * from './api';\nexport * from './types';\nexport * from './state';\nexport * from './utils/message';\n\nexport { Socket } from 'socket.io-client';\n"]}